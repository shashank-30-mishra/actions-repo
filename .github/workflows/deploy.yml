name: Deployment
on:
  push:
    branches:
      - main
jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v3
      - name: Load and cache dependenicies
        id: cache-deps
        uses: ./.github/actions/cached-dependency
        with:
          caching: 'false'
      - name: Getting output of cache installtion status
        run: echo "Cache used? ${{ steps.cache-deps.outputs.used-cache }} "
      - name: Lint code
        run: npm run lint
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v3
      - name: Load and cache dependenicies
        uses: ./.github/actions/cached-dependency
        with:
          caching: 'false'
      - name: Getting output of cache installtion status
        run: echo "Cache used? ${{ steps.cache-deps.outputs.used-cache }} "
      - name: Test code
        id: run-tests
        run: npm run test
      - name: Upload test report
        if: failure() && steps.run-tests.outcome == 'failure'
        uses: actions/upload-artifact@v3
        with:
          name: test-report
          path: test.json
  build:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v3
      - name: Load and cache dependenicies
        uses: ./.github/actions/cached-dependency
        with:
          caching: 'false'
      - name: Getting output of cache installtion status
        run: echo "Cache used? ${{ steps.cache-deps.outputs.used-cache }} "
      - name: Build website
        run: npm run build
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: dist-files
          path: dist
  deploy:
    permission:
      id-token: write
      contents: read
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v3
      - name: Get build artifacts
        uses: actions/download-artifact@v3
        with:
          name: dist-files
          path: ./dist
      - name: Output contents
        run: ls
      - name: Getting AWS credentials
        run: getting AWS credentials
        # uses: aws-actions/configure-aws-credentials@v2
        # with:
        #   role-to-assume: arn:aws:iam::1234567890:role/example-role
        #   aws-region: ${{ env.AWS_REGION }}

      - name: Deploy site
        run: echo "deploying web"
        # uses: ./.github/actions/dploy-s3-bucket-js
        # uses: ./.github/actions/deploy-s3-bucket-docker
        # env:
        #   AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        #   AWS_SECRECT_ACCESS_KEY: ${{ secrets.AWS_SECRECT_ACCESS_KEY }}
        # with:
        #   bucket: bucket name
        #   bucket-region: us-east-1
        #   dist-folder: ./dist
      # - name: Output information
      #   run: |
      #     echo "Live URL: ${{ steps.deploy.outputs.website-url }}"
  information:
    runs-on: ubuntu-latest
    steps:
      - name: Get the code
        uses: actions/checkout@v3
      - name: Run custom access
        run: echo "running aws deploy"
        # uses: ./.github/actions/dploy-s3-bucket-js